// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApplication.DataAccess;

#nullable disable

namespace TodoApplication.DataAccess.Migrations
{
    [DbContext(typeof(DContext))]
    [Migration("20220720102458_tables")]
    partial class tables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TodoApplication.Models.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AddressNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressNo = "162/4",
                            City = "Ambalangoda",
                            Name = "Sandun",
                            Street = "Anderson"
                        },
                        new
                        {
                            Id = 2,
                            AddressNo = "162/4",
                            City = "Ambalangoda",
                            Name = "Pushpika",
                            Street = "Anderson"
                        },
                        new
                        {
                            Id = 3,
                            AddressNo = "32B/7",
                            City = "California",
                            Name = "Jenny",
                            Street = "Calabasa"
                        });
                });

            modelBuilder.Entity("TodoApplication.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Testing description",
                            Title = "Test1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Testing description 2",
                            Title = "Test2",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Testing description 3",
                            Title = "Test3",
                            UserId = 3
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
